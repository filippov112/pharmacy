# Generated by Django 4.2.7 on 2024-01-27 13:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('document_scan', models.FileField(blank=True, null=True, upload_to='photos/certificate/%Y/%m/%d/', verbose_name='Скан документа')),
                ('number', models.IntegerField(default=0, unique=True, verbose_name='Номер')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(auto_now_add=True, verbose_name='Дата окончания')),
                ('certifying_authority', models.TextField(blank=True, default='', verbose_name='Сертифицирующий орган')),
            ],
            options={
                'verbose_name': 'Сертификат',
                'verbose_name_plural': 'Сертификаты',
                'db_table': 'Certificate',
                'ordering': ['number', 'supplier', 'medicine'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('document_scan', models.FileField(blank=True, null=True, upload_to='photos/contract/%Y/%m/%d/', verbose_name='Скан документа')),
                ('number', models.IntegerField(default=0, unique=True, verbose_name='Номер')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(auto_now_add=True, verbose_name='Дата окончания')),
                ('delivery_terms', models.TextField(blank=True, default='', verbose_name='Сроки поставки')),
                ('batch_sizes', models.TextField(blank=True, default='', verbose_name='Размеры партий')),
                ('payment_method', models.TextField(blank=True, default='', verbose_name='Способ оплаты')),
                ('delivery_conditions', models.TextField(blank=True, default='', verbose_name='Условия доставки')),
                ('prolongation', models.TextField(blank=True, default='', verbose_name='Возможность пролонгации')),
                ('other_conditions', models.TextField(blank=True, default='', verbose_name='Прочие условия сторон')),
            ],
            options={
                'verbose_name': 'Договор',
                'verbose_name_plural': 'Договоры',
                'db_table': 'Contract',
                'ordering': ['supplier', 'start_date', 'end_date'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('last_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, default='', max_length=15, verbose_name='Телефон')),
                ('specialization', models.CharField(blank=True, default='', max_length=100, verbose_name='Специализация')),
                ('position', models.CharField(blank=True, default='', max_length=100, verbose_name='Должность')),
                ('work_schedule', models.CharField(blank=True, default='', max_length=100, verbose_name='График работы')),
            ],
            options={
                'verbose_name': 'Врач',
                'verbose_name_plural': 'Врачи',
                'db_table': 'Doctor',
                'ordering': ['facility', 'last_name', 'first_name', 'middle_name'],
            },
        ),
        migrations.CreateModel(
            name='LegalEntity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='Название')),
                ('inn', models.CharField(blank=True, default='', max_length=12, verbose_name='ИНН')),
                ('kpp', models.CharField(blank=True, default='', max_length=9, verbose_name='КПП')),
                ('address', models.CharField(blank=True, default='', max_length=255, verbose_name='Адрес')),
                ('phone', models.CharField(blank=True, default='', max_length=100, verbose_name='Телефон')),
                ('contact_person', models.CharField(blank=True, default='', max_length=100, verbose_name='Контактное лицо')),
                ('contact_person_position', models.CharField(blank=True, default='', max_length=100, verbose_name='Должность контактного лица')),
                ('discounts', models.TextField(blank=True, default='', verbose_name='Скидки')),
            ],
            options={
                'verbose_name': 'Юридическое лицо',
                'verbose_name_plural': 'Юридические лица',
                'db_table': 'LegalEntity',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TableName', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Таблица')),
                ('EventDateTime', models.DateTimeField(blank=True, null=True, verbose_name='Дата/Время события')),
                ('EventType', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Тип события')),
                ('RecordID', models.IntegerField(blank=True, default=-1, null=True, verbose_name='Номер записи')),
                ('Details', models.TextField(blank=True, default='', max_length=100000, null=True, verbose_name='Описание изменений')),
            ],
            options={
                'verbose_name': 'Лог',
                'verbose_name_plural': 'Логи',
                'db_table': 'Logs',
                'ordering': ['-EventDateTime'],
            },
        ),
        migrations.CreateModel(
            name='MedicalFacility',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='Название')),
                ('city', models.CharField(blank=True, default='', max_length=100, verbose_name='Город')),
                ('address', models.CharField(blank=True, default='', max_length=255, verbose_name='Адрес')),
                ('phone', models.CharField(blank=True, default='', max_length=15, verbose_name='Телефон')),
                ('email', models.CharField(blank=True, default='', max_length=100, verbose_name='Электронная почта')),
                ('work_schedule', models.CharField(blank=True, default='', max_length=100, verbose_name='График работы')),
                ('profiles', models.CharField(blank=True, default='', max_length=255, verbose_name='Профили')),
            ],
            options={
                'verbose_name': 'Медицинское учреждение',
                'verbose_name_plural': 'Медицинские учреждения',
                'db_table': 'MedicalFacility',
                'ordering': ['name', 'city'],
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=100, verbose_name='Наименование')),
                ('article', models.CharField(default='', max_length=100, verbose_name='Артикул')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/medicine/%Y/%m/%d/', verbose_name='Фото')),
                ('expiration_date', models.IntegerField(blank=True, default=5, null=True, verbose_name='Срок годности')),
                ('storage_conditions', models.TextField(blank=True, default='', verbose_name='Условия хранения')),
                ('interactions', models.TextField(blank=True, default='', verbose_name='Взаимодействие')),
                ('limitations', models.TextField(blank=True, default='', verbose_name='Ограничения')),
                ('side_effects', models.TextField(blank=True, default='', verbose_name='Побочные эффекты')),
                ('usage_instruction', models.TextField(blank=True, default='', verbose_name='Инструкция к применению')),
            ],
            options={
                'verbose_name': 'Препарат',
                'verbose_name_plural': 'Препараты',
                'db_table': 'Medicine',
                'ordering': ['article', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MedicineGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(blank=True, default='', max_length=100, verbose_name='Название группы')),
            ],
            options={
                'verbose_name': 'Группа лекарств',
                'verbose_name_plural': 'Группы лекарств',
                'db_table': 'MedicineGroup',
                'ordering': ['group_name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата')),
                ('number', models.IntegerField(default=0, unique=True, verbose_name='Номер')),
                ('legal_entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mainapp.legalentity', verbose_name='Юридическое лицо')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'Order',
                'ordering': ['date', 'physical_person', 'legal_entity', 'seller'],
            },
        ),
        migrations.CreateModel(
            name='PhysicalPerson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('last_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Отчество')),
                ('city', models.CharField(blank=True, default='', max_length=100, verbose_name='Город')),
                ('address', models.CharField(blank=True, default='', max_length=255, verbose_name='Адрес')),
                ('phone', models.CharField(blank=True, default='', max_length=15, verbose_name='Телефон')),
                ('birth_date', models.DateField(auto_now_add=True, verbose_name='Дата рождения')),
                ('benefits', models.TextField(blank=True, default='', verbose_name='Предоставляемые льготы')),
            ],
            options={
                'verbose_name': 'Физическое лицо',
                'verbose_name_plural': 'Физические лица',
                'db_table': 'PhysicalPerson',
                'ordering': ['last_name', 'first_name', 'middle_name'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата')),
                ('number', models.IntegerField(default=0, unique=True, verbose_name='Номер')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mainapp.contract', verbose_name='Договор')),
            ],
            options={
                'verbose_name': 'Поставка',
                'verbose_name_plural': 'Поставки',
                'db_table': 'Receipt',
                'ordering': ['date', 'contract'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='Наименование')),
                ('city', models.CharField(blank=True, default='', max_length=100, verbose_name='Город')),
                ('address', models.CharField(blank=True, default='', max_length=200, verbose_name='Адрес')),
                ('phone', models.CharField(blank=True, default='', max_length=20, verbose_name='Телефон')),
                ('email', models.CharField(blank=True, default='', max_length=100, verbose_name='Электронная почта')),
                ('inn', models.CharField(blank=True, default='', max_length=12, verbose_name='ИНН')),
                ('kpp', models.CharField(blank=True, default='', max_length=9, verbose_name='КПП')),
                ('ogrn', models.CharField(blank=True, default='', max_length=13, verbose_name='ОГРН')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
                'db_table': 'Supplier',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReceiptItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(default=0, verbose_name='Количество')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Цена за единицу')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mainapp.medicine', verbose_name='Препарат')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.receipt', verbose_name='Поступление')),
            ],
            options={
                'verbose_name': 'Препарат в поставке',
                'verbose_name_plural': 'Препараты в поставках',
                'db_table': 'ReceiptItem',
                'ordering': ['receipt', 'medicine'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('photo', models.ImageField(blank=True, default='', null=True, upload_to='photos/profile/%Y/%m/%d/', verbose_name='Фото')),
                ('middle_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Отчество')),
                ('position', models.CharField(blank=True, default='', max_length=100, verbose_name='Должность')),
                ('address', models.CharField(blank=True, default='', max_length=255, verbose_name='Адрес')),
                ('passport', models.CharField(blank=True, default='', max_length=255, verbose_name='Паспорт')),
                ('phone', models.CharField(blank=True, default='', max_length=15, verbose_name='Телефон')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
                'db_table': 'Profile',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('document_scan', models.FileField(blank=True, null=True, upload_to='photos/prescription/%Y/%m/%d/', verbose_name='Скан документа')),
                ('prescription_date', models.DateField(auto_now_add=True, verbose_name='Дата рецепта')),
                ('pharmacy_visit_date', models.DateField(auto_now_add=True, verbose_name='Дата обращения')),
                ('number', models.IntegerField(default=0, unique=True, verbose_name='Номер')),
                ('status', models.CharField(blank=True, default='', max_length=100, verbose_name='Статус')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.doctor', verbose_name='Врач')),
                ('physical_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.physicalperson', verbose_name='Физическое лицо')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'db_table': 'Prescription',
                'ordering': ['number', 'physical_person'],
            },
        ),
        migrations.CreateModel(
            name='PrescComposition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dosage', models.CharField(blank=True, default='', max_length=255, verbose_name='Дозировка')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.medicine', verbose_name='Препарат')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.prescription', verbose_name='Рецепт')),
            ],
            options={
                'verbose_name': 'Состав рецепта',
                'verbose_name_plural': 'Составы рецептов',
                'db_table': 'PrescComposition',
            },
        ),
        migrations.CreateModel(
            name='OrderComposition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('quantity', models.IntegerField(default=0, verbose_name='Количество')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mainapp.medicine', verbose_name='Препарат')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Препарат в заказе',
                'verbose_name_plural': 'Препараты в заказах',
                'db_table': 'OrderComposition',
                'ordering': ['order', 'medicine'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='physical_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mainapp.physicalperson', verbose_name='Физическое лицо'),
        ),
        migrations.AddField(
            model_name='order',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mainapp.profile', verbose_name='Продавец'),
        ),
        migrations.AddField(
            model_name='medicine',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.medicinegroup', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='facility',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.medicalfacility', verbose_name='Учреждение'),
        ),
        migrations.CreateModel(
            name='ContractMedicine',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('prices', models.TextField(blank=True, default='', verbose_name='Цены')),
                ('discount_conditions', models.TextField(blank=True, default='', verbose_name='Условия скидок')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.contract', verbose_name='Договор')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mainapp.medicine', verbose_name='Препарат')),
            ],
            options={
                'verbose_name': 'Препарат по договору',
                'verbose_name_plural': 'Препараты по договорам',
                'db_table': 'ContractMedicine',
                'ordering': ['contract', 'medicine'],
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mainapp.supplier', verbose_name='Поставщик'),
        ),
        migrations.CreateModel(
            name='CertificateAttachment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('document_scan', models.FileField(upload_to='photos/certificate_attachment/%Y/%m/%d/', verbose_name='Скан документа')),
                ('certificate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.certificate', verbose_name='Сертификат')),
            ],
            options={
                'verbose_name': 'Приложение к сертификату',
                'verbose_name_plural': 'Приложения к сертификатам',
                'db_table': 'CertificateAttachment',
                'ordering': ['certificate'],
            },
        ),
        migrations.AddField(
            model_name='certificate',
            name='medicine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.medicine', verbose_name='Препарат'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.supplier', verbose_name='Поставщик'),
        ),
    ]
